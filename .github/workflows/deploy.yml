name: CI/CD Pipeline

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: üîê Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üê≥ Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: devopsregistry2025.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: üèóÔ∏è Build and push Docker image
        run: |
          docker build -t devopsregistry2025.azurecr.io/myapp:v1 ./app
          docker push devopsregistry2025.azurecr.io/myapp:v1

      - name: ‚öôÔ∏è Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible kubectl jq

      - name: üöÄ Run Ansible Playbook (Deploy to AKS)
        env:
          ACR_USERNAME: ${{ secrets.AZURE_ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.AZURE_ACR_PASSWORD }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: ansible-playbook ansible/deploy.yml

      - name: üß† Verify Deployment
        run: |
          echo "üîç Verifying deployment..."

          # Show running pods
          kubectl get pods -o wide
          echo ""

          # Show service info
          kubectl get svc
          echo ""

          echo "üåê Fetching external IP..."
          for i in {1..15}; do
            EXTERNAL_IP=$(kubectl get svc devops-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)
            if [ -n "$EXTERNAL_IP" ]; then
              echo "‚úÖ Application is live at: http://$EXTERNAL_IP"
              break
            fi
            echo "‚è≥ Waiting for LoadBalancer IP... (attempt $i)"
            sleep 10
          done

          if [ -z "$EXTERNAL_IP" ]; then
            echo "‚ùå Failed to get external IP. Check AKS service."
            exit 1
          fi
